-- TriplePattern: ?article <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://localhost/vocabulary/bench/Article> .
PATTERN_0 = load 'hbase://PO_S' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '','<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>,<http://localhost/vocabulary/bench/Article>') as (columncontent_0:map[]);
INTERMEDIATE_BAG_0 = foreach PATTERN_0 generate flatten(lupos.cloud.pig.udfs.MapToBagUDF($0)) as (output0:chararray);
bloom0i = load 'hbase://PO_S' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '','<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>,<http://localhost/vocabulary/bench/Article>') as (bloom1:map[]);
bloom0 = foreach bloom0i generate lupos.cloud.pig.udfs.BloomfilterMapToByteArrayUDF($0);

-- TriplePattern: ?article <http://purl.org/dc/elements/1.1/creator> ?person .
PATTERN_1 = load 'hbase://P_SO' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '','<http://purl.org/dc/elements/1.1/creator>') as (columncontent_1:map[]);
INTERMEDIATE_BAG_1 = foreach PATTERN_1 generate flatten(lupos.cloud.pig.udfs.MapToBagUDF($0)) as (output1_1:chararray, output2_1:chararray);
bloom1i = load 'hbase://P_SO' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '','<http://purl.org/dc/elements/1.1/creator>') as (bloom1:map[]);
bloom1 = foreach bloom1i generate lupos.cloud.pig.udfs.BloomfilterMapToByteArrayUDF($0); 

-- TriplePattern: ?inproc <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://localhost/vocabulary/bench/Inproceedings> .
PATTERN_2 = load 'hbase://PO_S' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '','<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>,<http://localhost/vocabulary/bench/Inproceedings>') as (columncontent_2:map[]);
INTERMEDIATE_BAG_2 = foreach PATTERN_2 generate flatten(lupos.cloud.pig.udfs.MapToBagUDF($0)) as (output2:chararray);
bloom2i = load 'hbase://PO_S' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '','<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>,<http://localhost/vocabulary/bench/Inproceedings>') as (bloom1:map[]);
bloom2 = foreach bloom2i generate lupos.cloud.pig.udfs.BloomfilterMapToByteArrayUDF($0);

-- TriplePattern: ?inproc <http://purl.org/dc/elements/1.1/creator> ?person .
PATTERN_3 = load 'hbase://P_SO' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '','<http://purl.org/dc/elements/1.1/creator>') as (columncontent_3:map[]);
INTERMEDIATE_BAG_3 = foreach PATTERN_3 generate flatten(lupos.cloud.pig.udfs.MapToBagUDF($0)) as (output1_3:chararray, output2_3:chararray); 
bloom3i = load 'hbase://P_SO' using lupos.cloud.pig.udfs.HBaseLoadUDF('boomfilter2', '','<http://purl.org/dc/elements/1.1/creator>') as (bloom2:map[]);
bloom3 = foreach bloom3i generate lupos.cloud.pig.udfs.BloomfilterMapToByteArrayUDF($0);

-- TriplePattern: ?person <http://xmlns.com/foaf/0.1/name> ?name .
PATTERN_4 = load 'hbase://P_SO' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '','<http://xmlns.com/foaf/0.1/name>') as (columncontent_4:map[]);
INTERMEDIATE_BAG_4 = foreach PATTERN_4 generate flatten(lupos.cloud.pig.udfs.MapToBagUDF($0)) as (output1_4:chararray, output2_4:chararray);
bloom4i = load 'hbase://P_SO' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '','<http://xmlns.com/foaf/0.1/name>') as (columncontent_4:map[]);
bloom4 = foreach bloom4i generate lupos.cloud.pig.udfs.BloomfilterMapToByteArrayUDF($0);

-- Join over ?person
INTERMEDIATE_BAG_3f = FILTER INTERMEDIATE_BAG_3 by lupos.cloud.pig.udfs.BloomfilterUDF(bloom1.$0, $1) AND lupos.cloud.pig.udfs.BloomfilterUDF(bloom4.$0, $1);
INTERMEDIATE_BAG_1f = FILTER INTERMEDIATE_BAG_1 by lupos.cloud.pig.udfs.BloomfilterUDF(bloom3.$0, $1) AND lupos.cloud.pig.udfs.BloomfilterUDF(bloom4.$0, $1); 
INTERMEDIATE_BAG_4f = FILTER INTERMEDIATE_BAG_4 by lupos.cloud.pig.udfs.BloomfilterUDF(bloom1.$3, $0) AND lupos.cloud.pig.udfs.BloomfilterUDF(bloom1.$0, $0);
INTERMEDIATE_BAG_5 = JOIN INTERMEDIATE_BAG_3 BY $1, INTERMEDIATE_BAG_1 BY $1, INTERMEDIATE_BAG_4 BY $0 PARALLEL 5;

-- Projection: ?inproc, ?article, ?person, ?name
INTERMEDIATE_BAG_6 = FOREACH INTERMEDIATE_BAG_5 GENERATE $0, $2, $1, $5;


-- Join over ?article
INTERMEDIATE_BAG_7 = JOIN INTERMEDIATE_BAG_0 BY $0, INTERMEDIATE_BAG_6 BY $1 PARALLEL 5;

-- Projection: ?inproc, ?person, ?name
INTERMEDIATE_BAG_8 = FOREACH INTERMEDIATE_BAG_7 GENERATE $1, $3, $4;

-- Join over ?inproc
INTERMEDIATE_BAG_9 = JOIN INTERMEDIATE_BAG_2 BY $0, INTERMEDIATE_BAG_8 BY $0 PARALLEL 5;

-- Projection: ?person, ?name
INTERMEDIATE_BAG_10 = FOREACH INTERMEDIATE_BAG_9 GENERATE $2, $3;

-- Distinct: 
X = DISTINCT INTERMEDIATE_BAG_10 PARALLEL 5;