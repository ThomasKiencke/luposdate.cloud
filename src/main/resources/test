-- TriplePattern: ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Person> .
PATTERN_0 = load 'hbase://PO_S' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '', '<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>,<http://xmlns.com/foaf/0.1/Person>', '/tmp/cloudBloomfilter_person') as (columncontent_0:bytearray);
INTERMEDIATE_BAG_0 = foreach PATTERN_0 generate flatten(lupos.cloud.pig.udfs.ListToBagUDF($0 )) as (output0:chararray);

-- TriplePattern: ?person ?predicate ?object .
S_PO_DATA = load 'hbase://S_PO' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '-loadKey true', '',  '/tmp/cloudBloomfilter_person', '/tmp/cloudBloomfilter_predicate') as (rowkey:chararray, columncontent_1:bytearray);
INTERMEDIATE_BAG_1 = foreach S_PO_DATA generate $0, flatten(lupos.cloud.pig.udfs.ListToBagUDF($1));

-- Projection: ?predicate, ?person
INTERMEDIATE_BAG_2 = FOREACH INTERMEDIATE_BAG_1 GENERATE $1, $0;

-- Join over ?person
INTERMEDIATE_BAG_3 = JOIN INTERMEDIATE_BAG_0 BY $0, INTERMEDIATE_BAG_2 BY $1 PARALLEL 5;
INTERMEDIATE_BAG_3 = FOREACH INTERMEDIATE_BAG_3 GENERATE $0, $1;

-- TriplePattern: ?person <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Person> .
PATTERN_4 = load 'hbase://PO_S' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '', '<http://www.w3.org/1999/02/22-rdf-syntax-ns#type>,<http://xmlns.com/foaf/0.1/Person>', '/tmp/cloudBloomfilter_person') as (columncontent_0:bytearray);
INTERMEDIATE_BAG_4 = foreach PATTERN_4 generate flatten(lupos.cloud.pig.udfs.ListToBagUDF($0 )) as (output0:chararray);

-- TriplePattern: ?subject ?predicate ?person .
S_PO_DATA = load 'hbase://S_PO' using lupos.cloud.pig.udfs.HBaseLoadUDF('Hexa', '-loadKey true', '',  '/tmp/cloudBloomfilter_subject', '/tmp/cloudBloomfilter_predicate') as (rowkey:chararray, columncontent_1:bytearray);
INTERMEDIATE_BAG_5 = foreach S_PO_DATA generate $0, flatten(lupos.cloud.pig.udfs.ListToBagUDF($1));

-- Projection: ?predicate, ?person
INTERMEDIATE_BAG_6 = FOREACH INTERMEDIATE_BAG_5 GENERATE $1, $2;

-- Join over ?person
INTERMEDIATE_BAG_7 = JOIN INTERMEDIATE_BAG_4 BY $0, INTERMEDIATE_BAG_6 BY $1 PARALLEL 5;
INTERMEDIATE_BAG_7 = FOREACH INTERMEDIATE_BAG_7 GENERATE $0, $1;

-- UNION:
INTERMEDIATE_BAG_8 = UNION INTERMEDIATE_BAG_3, INTERMEDIATE_BAG_7;

-- Projection: ?predicate
INTERMEDIATE_BAG_9 = FOREACH INTERMEDIATE_BAG_8 GENERATE $1;

-- Distinct: 
-- X = DISTINCT INTERMEDIATE_BAG_9 PARALLEL 5;
X = INTERMEDIATE_BAG_1;